
package io.hakbot.providers.appspider.ws;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.3.3-hudson-757-SNAPSHOT
 * Generated source version: 2.1
 * 
 */
@WebService(name = "NTOServiceSoap", targetNamespace = "http://ntobjectives.com/webservices/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NTOServiceSoap {


    /**
     * Starts Scan, and returns scan Token in Data field. Client can provide token to be used, which should be a GUID String - 32  hex integer without dashes; or empty string.
     * 
     * @param logFileName
     * @param username
     * @param maxLinks
     * @param host
     * @param token
     * @param authPassword
     * @param attackModules
     * @param authSingleSignonPage
     * @param authUsername
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "RunScan", action = "http://ntobjectives.com/webservices/RunScan")
    @WebResult(name = "RunScanResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "RunScan", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RunScan")
    @ResponseWrapper(localName = "RunScanResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RunScanResponse")
    public Result runScan(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token,
        @WebParam(name = "Host", targetNamespace = "http://ntobjectives.com/webservices/")
        String host,
        @WebParam(name = "MaxLinks", targetNamespace = "http://ntobjectives.com/webservices/")
        int maxLinks,
        @WebParam(name = "AttackModules", targetNamespace = "http://ntobjectives.com/webservices/")
        boolean attackModules,
        @WebParam(name = "AuthUsername", targetNamespace = "http://ntobjectives.com/webservices/")
        String authUsername,
        @WebParam(name = "AuthPassword", targetNamespace = "http://ntobjectives.com/webservices/")
        String authPassword,
        @WebParam(name = "AuthSingleSignonPage", targetNamespace = "http://ntobjectives.com/webservices/")
        String authSingleSignonPage,
        @WebParam(name = "LogFileName", targetNamespace = "http://ntobjectives.com/webservices/")
        String logFileName);

    /**
     * Starts Scan, and returns scan Token in Data field. Client can provide token to be used, which should be a GUID String - 32  hex integer without dashes; or empty string.
     * 
     * @param username
     * @param crawlConfig
     * @param token
     * @param spiderConfig
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "RunScanConfig", action = "http://ntobjectives.com/webservices/RunScanConfig")
    @WebResult(name = "RunScanConfigResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "RunScanConfig", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RunScanConfig")
    @ResponseWrapper(localName = "RunScanConfigResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RunScanConfigResponse")
    public Result runScanConfig(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token,
        @WebParam(name = "SpiderConfig", targetNamespace = "http://ntobjectives.com/webservices/")
        SPIDERCONFIG spiderConfig,
        @WebParam(name = "CrawlConfig", targetNamespace = "http://ntobjectives.com/webservices/")
        CRAWLCONFIG crawlConfig);

    /**
     * ScanConfig is scan config file content
     * 
     * @param macros
     * @param username
     * @param token
     * @param loginMacro
     * @param scanConfig
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "RunScanXml", action = "http://ntobjectives.com/webservices/RunScanXml")
    @WebResult(name = "RunScanXmlResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "RunScanXml", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RunScanXml")
    @ResponseWrapper(localName = "RunScanXmlResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RunScanXmlResponse")
    public Result runScanXml(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token,
        @WebParam(name = "ScanConfig", targetNamespace = "http://ntobjectives.com/webservices/")
        String scanConfig,
        @WebParam(name = "LoginMacro", targetNamespace = "http://ntobjectives.com/webservices/")
        String loginMacro,
        @WebParam(name = "Macros", targetNamespace = "http://ntobjectives.com/webservices/")
        ArrayOfString macros);

    /**
     * Gets GetFinding.
     * 
     * @param username
     * @param token
     * @param finding
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "GetFinding", action = "http://ntobjectives.com/webservices/GetFinding")
    @WebResult(name = "GetFindingResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetFinding", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetFinding")
    @ResponseWrapper(localName = "GetFindingResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetFindingResponse")
    public Result getFinding(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token,
        @WebParam(name = "Finding", targetNamespace = "http://ntobjectives.com/webservices/")
        int finding);

    /**
     * Stops current Scan.
     * 
     * @param username
     * @param generateReport
     * @param token
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "StopScan", action = "http://ntobjectives.com/webservices/StopScan")
    @WebResult(name = "StopScanResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "StopScan", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.StopScan")
    @ResponseWrapper(localName = "StopScanResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.StopScanResponse")
    public Result stopScan(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token,
        @WebParam(name = "GenerateReport", targetNamespace = "http://ntobjectives.com/webservices/")
        boolean generateReport);

    /**
     * Pauses current Scan.
     * 
     * @param username
     * @param token
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "PauseScan", action = "http://ntobjectives.com/webservices/PauseScan")
    @WebResult(name = "PauseScanResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "PauseScan", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.PauseScan")
    @ResponseWrapper(localName = "PauseScanResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.PauseScanResponse")
    public Result pauseScan(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token);

    /**
     * Resumes current Scan.
     * 
     * @param username
     * @param token
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "ResumeScan", action = "http://ntobjectives.com/webservices/ResumeScan")
    @WebResult(name = "ResumeScanResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "ResumeScan", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.ResumeScan")
    @ResponseWrapper(localName = "ResumeScanResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.ResumeScanResponse")
    public Result resumeScan(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token);

    /**
     * Provides quick scan status. Return running flag as true of false in Data field.
     * 
     * @param username
     * @param token
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "IsScanRunning", action = "http://ntobjectives.com/webservices/IsScanRunning")
    @WebResult(name = "IsScanRunningResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "IsScanRunning", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.IsScanRunning")
    @ResponseWrapper(localName = "IsScanRunningResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.IsScanRunningResponse")
    public Result isScanRunning(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token);

    /**
     * Gets Scan Log.
     * 
     * @param username
     * @param token
     * @param password
     * @param newOnly
     * @return
     *     returns com.restjob.providers.appspider.ws.ArrayOfString
     */
    @WebMethod(operationName = "GetLog", action = "http://ntobjectives.com/webservices/GetLog")
    @WebResult(name = "GetLogResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetLog", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetLog")
    @ResponseWrapper(localName = "GetLogResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetLogResponse")
    public ArrayOfString getLog(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token,
        @WebParam(name = "NewOnly", targetNamespace = "http://ntobjectives.com/webservices/")
        boolean newOnly);

    /**
     * Gets Scan Status.
     * 
     * @param username
     * @param token
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.SCANSTATUS
     */
    @WebMethod(operationName = "GetStatus", action = "http://ntobjectives.com/webservices/GetStatus")
    @WebResult(name = "GetStatusResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetStatus", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetStatus")
    @ResponseWrapper(localName = "GetStatusResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetStatusResponse")
    public SCANSTATUS getStatus(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token);

    /**
     * Gets Scan Status.
     * 
     * @param username
     * @param token
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.SCANSTATUS2
     */
    @WebMethod(operationName = "GetStatus2", action = "http://ntobjectives.com/webservices/GetStatus2")
    @WebResult(name = "GetStatus2Result", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetStatus2", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetStatus2")
    @ResponseWrapper(localName = "GetStatus2Response", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetStatus2Response")
    public SCANSTATUS2 getStatus2(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token);

    /**
     * Returns a service greeting in a Data field.
     * 
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "PingService", action = "http://ntobjectives.com/webservices/PingService")
    @WebResult(name = "PingServiceResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "PingService", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.PingService")
    @ResponseWrapper(localName = "PingServiceResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.PingServiceResponse")
    public Result pingService();

    /**
     * Returns a SpiderCOM greeting in Data field.
     * 
     * @param username
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "PingSpiderCom", action = "http://ntobjectives.com/webservices/PingSpiderCom")
    @WebResult(name = "PingSpiderComResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "PingSpiderCom", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.PingSpiderCom")
    @ResponseWrapper(localName = "PingSpiderComResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.PingSpiderComResponse")
    public Result pingSpiderCom(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Save binary P12 data into the local file.
     * 
     * @param content
     * @param username
     * @param fileName
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "WriteP12File", action = "http://ntobjectives.com/webservices/WriteP12File")
    @WebResult(name = "WriteP12FileResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "WriteP12File", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.WriteP12File")
    @ResponseWrapper(localName = "WriteP12FileResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.WriteP12FileResponse")
    public Result writeP12File(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "FileName", targetNamespace = "http://ntobjectives.com/webservices/")
        String fileName,
        @WebParam(name = "Content", targetNamespace = "http://ntobjectives.com/webservices/")
        byte[] content);

    /**
     * Returns CrawlConfig and SpiderConfig filled in with default values.
     * 
     * @param crawlConfig
     * @param spiderConfig
     */
    @WebMethod(operationName = "GetDefaultConfig", action = "http://ntobjectives.com/webservices/GetDefaultConfig")
    @RequestWrapper(localName = "GetDefaultConfig", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetDefaultConfig")
    @ResponseWrapper(localName = "GetDefaultConfigResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetDefaultConfigResponse")
    public void getDefaultConfig(
        @WebParam(name = "CrawlConfig", targetNamespace = "http://ntobjectives.com/webservices/", mode = WebParam.Mode.OUT)
        Holder<CRAWLCONFIG> crawlConfig,
        @WebParam(name = "SpiderConfig", targetNamespace = "http://ntobjectives.com/webservices/", mode = WebParam.Mode.OUT)
        Holder<SPIDERCONFIG> spiderConfig);

    /**
     * Converts web service CrawlConfig and SpiderConfig into application config.xml.
     * 
     * @param crawlConfig
     * @param spiderConfig
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ConvertConfigs", action = "http://ntobjectives.com/webservices/ConvertConfigs")
    @WebResult(name = "ConvertConfigsResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "ConvertConfigs", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.ConvertConfigs")
    @ResponseWrapper(localName = "ConvertConfigsResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.ConvertConfigsResponse")
    public String convertConfigs(
        @WebParam(name = "CrawlConfig", targetNamespace = "http://ntobjectives.com/webservices/")
        CRAWLCONFIG crawlConfig,
        @WebParam(name = "SpiderConfig", targetNamespace = "http://ntobjectives.com/webservices/")
        SPIDERCONFIG spiderConfig);

    /**
     * Start Port Scan operation. Input parameters: comma separated IP range (xxx.xxx.xxx.xxx-yyy.yyy.yyy.yyy,...), command separated port range (px-py,...), output token to get operation status and result.
     * 
     * @param szIpRange
     * @param username
     * @param szPortRange
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "ScanIpPortRange", action = "http://ntobjectives.com/webservices/ScanIpPortRange")
    @WebResult(name = "ScanIpPortRangeResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "ScanIpPortRange", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.ScanIpPortRange")
    @ResponseWrapper(localName = "ScanIpPortRangeResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.ScanIpPortRangeResponse")
    public Result scanIpPortRange(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "szIpRange", targetNamespace = "http://ntobjectives.com/webservices/")
        String szIpRange,
        @WebParam(name = "szPortRange", targetNamespace = "http://ntobjectives.com/webservices/")
        String szPortRange);

    /**
     * Returns results of a Port Scan operation. Running flag indicates twhter operation is completed or not.
     * 
     * @return
     *     returns com.restjob.providers.appspider.ws.IPSCANRESULT
     */
    @WebMethod(operationName = "GetIpScanResult", action = "http://ntobjectives.com/webservices/GetIpScanResult")
    @WebResult(name = "GetIpScanResultResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetIpScanResult", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetIpScanResult")
    @ResponseWrapper(localName = "GetIpScanResultResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetIpScanResultResponse")
    public IPSCANRESULT getIpScanResult();

    /**
     * Deletes a file or a directory on the disk.
     * 
     * @param username
     * @param fileOrDirPath
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "DeleteFileOrDirectory", action = "http://ntobjectives.com/webservices/DeleteFileOrDirectory")
    @WebResult(name = "DeleteFileOrDirectoryResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "DeleteFileOrDirectory", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.DeleteFileOrDirectory")
    @ResponseWrapper(localName = "DeleteFileOrDirectoryResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.DeleteFileOrDirectoryResponse")
    public Result deleteFileOrDirectory(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "FileOrDirPath", targetNamespace = "http://ntobjectives.com/webservices/")
        String fileOrDirPath);

    /**
     * Enumerates all files in a directory.
     * 
     * @param bRecursive
     * @param username
     * @param directoryPath
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.ArrayOfString
     */
    @WebMethod(operationName = "GetDirectoryFiles", action = "http://ntobjectives.com/webservices/GetDirectoryFiles")
    @WebResult(name = "GetDirectoryFilesResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetDirectoryFiles", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetDirectoryFiles")
    @ResponseWrapper(localName = "GetDirectoryFilesResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetDirectoryFilesResponse")
    public ArrayOfString getDirectoryFiles(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "DirectoryPath", targetNamespace = "http://ntobjectives.com/webservices/")
        String directoryPath,
        @WebParam(name = "bRecursive", targetNamespace = "http://ntobjectives.com/webservices/")
        boolean bRecursive);

    /**
     * Upload a file.
     * 
     * @param content
     * @param username
     * @param location
     * @param fileName
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "UploadFile", action = "http://ntobjectives.com/webservices/UploadFile")
    @WebResult(name = "UploadFileResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "UploadFile", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UploadFile")
    @ResponseWrapper(localName = "UploadFileResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UploadFileResponse")
    public Result uploadFile(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Location", targetNamespace = "http://ntobjectives.com/webservices/")
        String location,
        @WebParam(name = "FileName", targetNamespace = "http://ntobjectives.com/webservices/")
        String fileName,
        @WebParam(name = "Content", targetNamespace = "http://ntobjectives.com/webservices/")
        byte[] content);

    /**
     * Upload a file by chunks.
     * 
     * @param content
     * @param username
     * @param location
     * @param fileName
     * @param offset
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "UploadFile2", action = "http://ntobjectives.com/webservices/UploadFile2")
    @WebResult(name = "UploadFile2Result", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "UploadFile2", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UploadFile2")
    @ResponseWrapper(localName = "UploadFile2Response", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UploadFile2Response")
    public Result uploadFile2(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Location", targetNamespace = "http://ntobjectives.com/webservices/")
        String location,
        @WebParam(name = "FileName", targetNamespace = "http://ntobjectives.com/webservices/")
        String fileName,
        @WebParam(name = "Content", targetNamespace = "http://ntobjectives.com/webservices/")
        byte[] content,
        @WebParam(name = "Offset", targetNamespace = "http://ntobjectives.com/webservices/")
        long offset);

    /**
     * Get length of uploaded file.
     * 
     * @param username
     * @param location
     * @param fileName
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "UploadFileLength", action = "http://ntobjectives.com/webservices/UploadFileLength")
    @WebResult(name = "UploadFileLengthResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "UploadFileLength", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UploadFileLength")
    @ResponseWrapper(localName = "UploadFileLengthResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UploadFileLengthResponse")
    public Result uploadFileLength(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Location", targetNamespace = "http://ntobjectives.com/webservices/")
        String location,
        @WebParam(name = "FileName", targetNamespace = "http://ntobjectives.com/webservices/")
        String fileName);

    /**
     * Retrieve License Information.
     * 
     * @param username
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.LICENSEINFO
     */
    @WebMethod(operationName = "GetLicenseInfo", action = "http://ntobjectives.com/webservices/GetLicenseInfo")
    @WebResult(name = "GetLicenseInfoResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetLicenseInfo", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetLicenseInfo")
    @ResponseWrapper(localName = "GetLicenseInfoResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetLicenseInfoResponse")
    public LICENSEINFO getLicenseInfo(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Set New License.
     * 
     * @param username
     * @param licenseKey
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "SetLicenseInfo", action = "http://ntobjectives.com/webservices/SetLicenseInfo")
    @WebResult(name = "SetLicenseInfoResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "SetLicenseInfo", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.SetLicenseInfo")
    @ResponseWrapper(localName = "SetLicenseInfoResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.SetLicenseInfoResponse")
    public String setLicenseInfo(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "LicenseKey", targetNamespace = "http://ntobjectives.com/webservices/")
        String licenseKey);

    /**
     * Descrypt strings encrypted with proprietary algorithm.
     * 
     * @param input3
     * @param input2
     * @param input1
     * @return
     *     returns com.restjob.providers.appspider.ws.ThreeStrings
     */
    @WebMethod(operationName = "DecryptStrings", action = "http://ntobjectives.com/webservices/DecryptStrings")
    @WebResult(name = "DecryptStringsResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "DecryptStrings", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.DecryptStrings")
    @ResponseWrapper(localName = "DecryptStringsResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.DecryptStringsResponse")
    public ThreeStrings decryptStrings(
        @WebParam(name = "Input1", targetNamespace = "http://ntobjectives.com/webservices/")
        String input1,
        @WebParam(name = "Input2", targetNamespace = "http://ntobjectives.com/webservices/")
        String input2,
        @WebParam(name = "Input3", targetNamespace = "http://ntobjectives.com/webservices/")
        String input3);

    /**
     * Tests if the service is busy processing another request.
     * 
     * @param username
     * @param password
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsBusy", action = "http://ntobjectives.com/webservices/IsBusy")
    @WebResult(name = "IsBusyResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "IsBusy", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.IsBusy")
    @ResponseWrapper(localName = "IsBusyResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.IsBusyResponse")
    public boolean isBusy(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Get Version of Scan Engine.
     * 
     * @param username
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetVersion", action = "http://ntobjectives.com/webservices/GetVersion")
    @WebResult(name = "GetVersionResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetVersion", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetVersion")
    @ResponseWrapper(localName = "GetVersionResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetVersionResponse")
    public String getVersion(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Get Shared IPAddress of Scan Engine.
     * 
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "GetIPAddress", action = "http://ntobjectives.com/webservices/GetIPAddress")
    @WebResult(name = "GetIPAddressResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetIPAddress", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetIPAddress")
    @ResponseWrapper(localName = "GetIPAddressResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetIPAddressResponse")
    public Result getIPAddress();

    /**
     * Set flag that makes web service features unaccessible and makes it returning result "Administrative offline"
     * 
     * @param username
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "SetAdministrativeOffline", action = "http://ntobjectives.com/webservices/SetAdministrativeOffline")
    @WebResult(name = "SetAdministrativeOfflineResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "SetAdministrativeOffline", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.SetAdministrativeOffline")
    @ResponseWrapper(localName = "SetAdministrativeOfflineResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.SetAdministrativeOfflineResponse")
    public String setAdministrativeOffline(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Remove flag that makes web service features unaccessible and makes it returning result "Administrative offline"
     * 
     * @param username
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RemoveAdministrativeOffline", action = "http://ntobjectives.com/webservices/RemoveAdministrativeOffline")
    @WebResult(name = "RemoveAdministrativeOfflineResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "RemoveAdministrativeOffline", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RemoveAdministrativeOffline")
    @ResponseWrapper(localName = "RemoveAdministrativeOfflineResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RemoveAdministrativeOfflineResponse")
    public String removeAdministrativeOffline(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Modify credentials, pass new username as parameter1 and new password as parameter2
     * 
     * @param username
     * @param parameter2
     * @param parameter1
     * @param password
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ModifyCredentials", action = "http://ntobjectives.com/webservices/ModifyCredentials")
    @WebResult(name = "ModifyCredentialsResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "ModifyCredentials", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.ModifyCredentials")
    @ResponseWrapper(localName = "ModifyCredentialsResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.ModifyCredentialsResponse")
    public String modifyCredentials(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "parameter1", targetNamespace = "http://ntobjectives.com/webservices/")
        String parameter1,
        @WebParam(name = "parameter2", targetNamespace = "http://ntobjectives.com/webservices/")
        String parameter2);

    /**
     * Upload installer, pass file name and file content
     * 
     * @param content
     * @param username
     * @param szFileName
     * @param szReserved
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "UpdateEngine", action = "http://ntobjectives.com/webservices/UpdateEngine")
    @WebResult(name = "UpdateEngineResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "UpdateEngine", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UpdateEngine")
    @ResponseWrapper(localName = "UpdateEngineResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UpdateEngineResponse")
    public Result updateEngine(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "szFileName", targetNamespace = "http://ntobjectives.com/webservices/")
        String szFileName,
        @WebParam(name = "Content", targetNamespace = "http://ntobjectives.com/webservices/")
        byte[] content,
        @WebParam(name = "szReserved", targetNamespace = "http://ntobjectives.com/webservices/")
        String szReserved);

    /**
     * Upload installer
     * 
     * @param username
     * @param szReserved
     * @param szToken
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "UpdateResult", action = "http://ntobjectives.com/webservices/UpdateResult")
    @WebResult(name = "UpdateResultResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "UpdateResult", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UpdateResult")
    @ResponseWrapper(localName = "UpdateResultResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.UpdateResultResponse")
    public Result updateResult(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "szToken", targetNamespace = "http://ntobjectives.com/webservices/")
        String szToken,
        @WebParam(name = "szReserved", targetNamespace = "http://ntobjectives.com/webservices/")
        String szReserved);

    /**
     * Get free space available on hard drive where a scan runs, in bytes
     * 
     * @param username
     * @param szReserved
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "GetFreeSpace1", action = "http://ntobjectives.com/webservices/GetFreeSpace1")
    @WebResult(name = "GetFreeSpace1Result", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetFreeSpace1", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetFreeSpace1")
    @ResponseWrapper(localName = "GetFreeSpace1Response", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetFreeSpace1Response")
    public Result getFreeSpace1(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "szReserved", targetNamespace = "http://ntobjectives.com/webservices/")
        String szReserved);

    /**
     * Get free space available on data storage hard drive, in bytes
     * 
     * @param username
     * @param szReserved
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "GetFreeSpace2", action = "http://ntobjectives.com/webservices/GetFreeSpace2")
    @WebResult(name = "GetFreeSpace2Result", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetFreeSpace2", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetFreeSpace2")
    @ResponseWrapper(localName = "GetFreeSpace2Response", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetFreeSpace2Response")
    public Result getFreeSpace2(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "szReserved", targetNamespace = "http://ntobjectives.com/webservices/")
        String szReserved);

    /**
     * Get free space available on data storage hard drive, in bytes
     * 
     * @param username
     * @param getSysInfoResult
     * @param szReserved
     * @param data
     * @param password
     */
    @WebMethod(operationName = "GetSysInfo", action = "http://ntobjectives.com/webservices/GetSysInfo")
    @RequestWrapper(localName = "GetSysInfo", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetSysInfo")
    @ResponseWrapper(localName = "GetSysInfoResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetSysInfoResponse")
    public void getSysInfo(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "szReserved", targetNamespace = "http://ntobjectives.com/webservices/")
        String szReserved,
        @WebParam(name = "GetSysInfoResult", targetNamespace = "http://ntobjectives.com/webservices/", mode = WebParam.Mode.OUT)
        Holder<Result> getSysInfoResult,
        @WebParam(name = "data", targetNamespace = "http://ntobjectives.com/webservices/", mode = WebParam.Mode.OUT)
        Holder<SYSTEMINFO> data);

    /**
     * Reboot this system
     * 
     * @param username
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "Reboot", action = "http://ntobjectives.com/webservices/Reboot")
    @WebResult(name = "RebootResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "Reboot", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.Reboot")
    @ResponseWrapper(localName = "RebootResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RebootResponse")
    public Result reboot(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Reboot this system
     * 
     * @param username
     * @param password
     * @param memoryLimit
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "NeedReboot", action = "http://ntobjectives.com/webservices/NeedReboot")
    @WebResult(name = "NeedRebootResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "NeedReboot", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.NeedReboot")
    @ResponseWrapper(localName = "NeedRebootResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.NeedRebootResponse")
    public Result needReboot(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "MemoryLimit", targetNamespace = "http://ntobjectives.com/webservices/")
        long memoryLimit);

    /**
     * Get engine schema
     * 
     * @param username
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "GetEngineSchema", action = "http://ntobjectives.com/webservices/GetEngineSchema")
    @WebResult(name = "GetEngineSchemaResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetEngineSchema", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetEngineSchema")
    @ResponseWrapper(localName = "GetEngineSchemaResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetEngineSchemaResponse")
    public Result getEngineSchema(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Get default config
     * 
     * @param username
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "GetDefaultXmlConfig", action = "http://ntobjectives.com/webservices/GetDefaultXmlConfig")
    @WebResult(name = "GetDefaultXmlConfigResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetDefaultXmlConfig", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetDefaultXmlConfig")
    @ResponseWrapper(localName = "GetDefaultXmlConfigResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetDefaultXmlConfigResponse")
    public Result getDefaultXmlConfig(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * Get default config
     * 
     * @param username
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "GetListOfModules", action = "http://ntobjectives.com/webservices/GetListOfModules")
    @WebResult(name = "GetListOfModulesResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "GetListOfModules", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetListOfModules")
    @ResponseWrapper(localName = "GetListOfModulesResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.GetListOfModulesResponse")
    public Result getListOfModules(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password);

    /**
     * RegenerateReport
     * 
     * @param username
     * @param token
     * @param scanConfig
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "RegenerateReport", action = "http://ntobjectives.com/webservices/RegenerateReport")
    @WebResult(name = "RegenerateReportResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "RegenerateReport", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RegenerateReport")
    @ResponseWrapper(localName = "RegenerateReportResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RegenerateReportResponse")
    public Result regenerateReport(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token,
        @WebParam(name = "ScanConfig", targetNamespace = "http://ntobjectives.com/webservices/")
        String scanConfig);

    /**
     * Returns Status of method RegenerateReport .
     * 
     * @param username
     * @param token
     * @param password
     * @return
     *     returns com.restjob.providers.appspider.ws.Result
     */
    @WebMethod(operationName = "RegenerateReportStatus", action = "http://ntobjectives.com/webservices/RegenerateReportStatus")
    @WebResult(name = "RegenerateReportStatusResult", targetNamespace = "http://ntobjectives.com/webservices/")
    @RequestWrapper(localName = "RegenerateReportStatus", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RegenerateReportStatus")
    @ResponseWrapper(localName = "RegenerateReportStatusResponse", targetNamespace = "http://ntobjectives.com/webservices/", className = "com.restjob.providers.appspider.ws.RegenerateReportStatusResponse")
    public Result regenerateReportStatus(
        @WebParam(name = "Username", targetNamespace = "http://ntobjectives.com/webservices/")
        String username,
        @WebParam(name = "Password", targetNamespace = "http://ntobjectives.com/webservices/")
        String password,
        @WebParam(name = "Token", targetNamespace = "http://ntobjectives.com/webservices/")
        String token);

}
